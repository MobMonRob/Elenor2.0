name: backend-build-test

on:
  push:
    branches:
      - main
      - pipeline

jobs:
  build-and-test:
    runs-on: ubuntu-latest

    services:
      mariadb:
        image: mariadb:latest
        ports:
          - 3306:3306
        env:
          MARIADB_ROOT_PASSWORD: my-secret-password
          MARIADB_DATABASE: elinor2
          MARIADB_USER: myuser
          MARIADB_PASSWORD: myuserpassword
        options: >-
          --health-cmd="mysqladmin ping --host=localhost --user=root --password=my-secret-password"
          --health-interval=30s
          --health-timeout=10s
          --health-retries=5
          --health-start_period=30s

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2

    - name: Cache Maven dependencies
      uses: actions/cache@v2
      with:
        path: ~/.m2/repository
        key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
        restore-keys: |
          ${{ runner.os }}-maven-

    - name: Set up JDK 11
      uses: actions/setup-java@v3
      with:
        distribution: 'adoptopenjdk'
        java-version: '11'

    - name: Build the backend application with Maven
      run: mvn clean install -DskipTests

    - name: Run tests using Docker Compose
      run: |
        # Erstellen und Starten der Docker-Container
        docker-compose -f docker-compose.yml up -d
        
        # FÃ¼hren Sie die Spring Boot-Anwendungstests aus
        docker-compose exec -T app mvn test

        # Stoppen und Entfernen der Docker-Container
        docker-compose down

